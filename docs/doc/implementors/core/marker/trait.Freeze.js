(function() {var implementors = {
"rs_fxr":[["impl Freeze for <a class=\"enum\" href=\"rs_fxr/bit_crush/enum.BitCrush.html\" title=\"enum rs_fxr::bit_crush::BitCrush\">BitCrush</a>",1,["rs_fxr::bit_crush::BitCrush"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rs_fxr/bit_crush/struct.BitCrushedSound.html\" title=\"struct rs_fxr::bit_crush::BitCrushedSound\">BitCrushedSound</a>&lt;'a&gt;",1,["rs_fxr::bit_crush::BitCrushedSound"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/envelope/struct.Interval.html\" title=\"struct rs_fxr::envelope::Interval\">Interval</a>",1,["rs_fxr::envelope::Interval"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/envelope/struct.Envelope.html\" title=\"struct rs_fxr::envelope::Envelope\">Envelope</a>",1,["rs_fxr::envelope::Envelope"]],["impl&lt;W, E&gt; Freeze for <a class=\"struct\" href=\"rs_fxr/noise/struct.Noise.html\" title=\"struct rs_fxr::noise::Noise\">Noise</a>&lt;W, E&gt;<span class=\"where fmt-newline\">where\n    E: Freeze,\n    W: Freeze,</span>",1,["rs_fxr::noise::Noise"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/noise/struct.WhiteNoise.html\" title=\"struct rs_fxr::noise::WhiteNoise\">WhiteNoise</a>",1,["rs_fxr::noise::WhiteNoise"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/noise/struct.PinkNoise.html\" title=\"struct rs_fxr::noise::PinkNoise\">PinkNoise</a>",1,["rs_fxr::noise::PinkNoise"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/noise/struct.BrownNoise.html\" title=\"struct rs_fxr::noise::BrownNoise\">BrownNoise</a>",1,["rs_fxr::noise::BrownNoise"]],["impl&lt;W, E&gt; Freeze for <a class=\"struct\" href=\"rs_fxr/synth/struct.Synth.html\" title=\"struct rs_fxr::synth::Synth\">Synth</a>&lt;W, E&gt;<span class=\"where fmt-newline\">where\n    E: Freeze,\n    W: Freeze,</span>",1,["rs_fxr::synth::Synth"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/waveform/struct.Sine.html\" title=\"struct rs_fxr::waveform::Sine\">Sine</a>",1,["rs_fxr::waveform::Sine"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/waveform/struct.Triangle.html\" title=\"struct rs_fxr::waveform::Triangle\">Triangle</a>",1,["rs_fxr::waveform::Triangle"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/waveform/struct.Sawtooth.html\" title=\"struct rs_fxr::waveform::Sawtooth\">Sawtooth</a>",1,["rs_fxr::waveform::Sawtooth"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/waveform/struct.Breaker.html\" title=\"struct rs_fxr::waveform::Breaker\">Breaker</a>",1,["rs_fxr::waveform::Breaker"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/waveform/struct.Tangent.html\" title=\"struct rs_fxr::waveform::Tangent\">Tangent</a>",1,["rs_fxr::waveform::Tangent"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/waveform/struct.Square.html\" title=\"struct rs_fxr::waveform::Square\">Square</a>",1,["rs_fxr::waveform::Square"]],["impl Freeze for <a class=\"enum\" href=\"rs_fxr/serde/enum.WaveformType.html\" title=\"enum rs_fxr::serde::WaveformType\">WaveformType</a>",1,["rs_fxr::serde::WaveformType"]],["impl Freeze for <a class=\"struct\" href=\"rs_fxr/serde/struct.Description.html\" title=\"struct rs_fxr::serde::Description\">Description</a>",1,["rs_fxr::serde::Description"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rs_fxr/struct.Samples.html\" title=\"struct rs_fxr::Samples\">Samples</a>&lt;T&gt;",1,["rs_fxr::Samples"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()